@model List<Firebase.Database.FirebaseObject<BartmartWeb.Models.User>>
@{
   ViewData["Title"] = "Admin Panel";
}

<h2>Admin Panel</h2>
<div class="d-flex justify-content-between mb-3">
<h3>Users</h3>
<button class="btn btn-success" id="addUserButton">+ Add New User</button>
</div>
<table class="table">
<thead>
    <tr>
    <th>Username</th>
    <th>First Name</th>
    <th>Last Name</th>
    <th>Phone</th>
    <th>Email</th>
    <th>Action</th>
    </tr>
</thead>
<tbody>
       @foreach (var user in Model)
       {
<tr>
<td>@user.Object.UserName</td>
<td>@user.Object.FirstName</td>
<td>@user.Object.LastName</td>
<td>@user.Object.PhoneNumber</td>
<td>@user.Object.Email</td>
<td>
<button class="btn btn-primary editUserButton" data-id="@user.Key">Edit</button>
<button class="btn btn-danger deleteUserButton" data-id="@user.Key">Delete</button>
</td>
</tr>
       }
</tbody>
</table>
<div class="pagination">
   @for (int i = 1; i <= ViewBag.TotalPages; i++)
   {
<a href="@Url.Action("Index", new { pageNumber = i })">@i</a>
   }
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
<div class="modal-dialog">
<div class="modal-content">
<div class="modal-header">
<h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
<button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
<span aria-hidden="true">&times;</span>
</button>
</div>
<div class="modal-body">
<form id="editUserForm">
<input type="hidden" id="editUserId">
<div class="form-group">
<label for="editUserName">Username</label>
<input type="text" class="form-control" id="editUserName" placeholder="Username">
</div>
<div class="form-group">
<label for="editFirstName">First Name</label>
<input type="text" class="form-control" id="editFirstName" placeholder="First Name">
</div>
<div class="form-group">
<label for="editLastName">Last Name</label>
<input type="text" class="form-control" id="editLastName" placeholder="Last Name">
</div>
<div class="form-group">
<label for="editEmail">Email</label>
<input type="email" class="form-control" id="editEmail" placeholder="Email">
</div>
<div class="form-group">
<label for="editPhoneNumber">Phone Number</label>
<input type="text" class="form-control" id="editPhoneNumber" placeholder="Phone Number">
</div>
<div class="form-group">
<label for="editCity">City</label>
<input type="text" class="form-control" id="editCity" placeholder="City">
</div>
<div class="form-group">
<label for="editAddress">Address</label>
<input type="text" class="form-control" id="editAddress" placeholder="Address">
</div>
<div class="form-group">
<label for="editProfilePic">Profile Picture URL</label>
<input type="text" class="form-control" id="editProfilePic" placeholder="Profile Picture URL">
</div>
<div class="form-group">
<label>This user has admin role:</label><br>
<input type="radio" id="isAdminYes" name="isAdmin" value="true"> Yes
<input type="radio" id="isAdminNo" name="isAdmin" value="false"> No
</div>
<button type="button" class="btn btn-primary" id="saveUserChanges">Save Changes</button>
</form>
</div>
</div>
</div>
</div>
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
@* <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script> *@
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script type="module">
   import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.1.3/firebase-app.js';
   import { getAuth, createUserWithEmailAndPassword } from 'https://www.gstatic.com/firebasejs/9.1.3/firebase-auth.js';
   import { getDatabase, ref, set, remove ,update,get} from 'https://www.gstatic.com/firebasejs/9.1.3/firebase-database.js';
   const firebaseConfig = {
       apiKey: "AIzaSyB5hjms7ZPmTL4jEuG1P6BIOi6zfSpslgQ",
       authDomain: "bartmartdb-4d9a9.firebaseapp.com",
       databaseURL: "https://bartmartdb-4d9a9-default-rtdb.firebaseio.com",
       projectId: "bartmartdb-4d9a9",
       storageBucket: "bartmartdb-4d9a9.appspot.com",
       messagingSenderId: "242866251858",
       appId: "1:242866251858:web:00f525da3828eae2fd578b",
       measurementId: "G-90SSEGT956"
   };
   const app = initializeApp(firebaseConfig);
   const auth = getAuth(app);
   const database = getDatabase(app);
   document.getElementById('addUserButton').addEventListener('click', async () => {
       const username = prompt('Enter username:');
       const password = prompt('Enter password:');
       const email = prompt('Enter email:');
       if (username && password && email) {
           try {
               const userCredential = await createUserWithEmailAndPassword(auth, email, password);
               const user = userCredential.user;
               const userData = {
                   username: username,
                   email: email,
                   isAdmin: false 
               };
               await set(ref(database, 'users/' + user.uid), userData);
               alert('User added successfully!');
               location.reload();
           } catch (error) {
               alert('Error adding user: ' + error.message);
           }
       }
   });
   document.querySelectorAll('.deleteUserButton').forEach(button => {
       button.addEventListener('click', async () => {
           const userId = button.getAttribute('data-id');
           if (confirm('Are you sure you want to delete this user?')) {
               try {
                   await remove(ref(database, 'users/' + userId));
                   alert('User deleted successfully!');
                   location.reload();
               } catch (error) {
                   alert('Error deleting user: ' + error.message);
               }
           }
       });
   });
document.querySelectorAll('.editUserButton').forEach(button => {
      button.addEventListener('click', async () => {
const userId = button.getAttribute('data-id');
          const currentUserRef = ref(database, 'users/' + userId);
          try {
              const snapshot = await get(currentUserRef);
              const userData = snapshot.val();
       document.getElementById('editUserId').value = userId;
       document.getElementById('editUserName').value = userData.username;
       document.getElementById('editFirstName').value = userData.firstname;
       document.getElementById('editLastName').value = userData.lastname;
       document.getElementById('editEmail').value = userData.email;
       document.getElementById('editPhoneNumber').value = userData.phonenumber;
       document.getElementById('editCity').value = userData.city;
       document.getElementById('editAddress').value = userData.address;
       document.getElementById('editProfilePic').value = userData.profilepic;
       document.getElementById(userData.isAdmin ? 'isAdminYes' : 'isAdminNo').checked = true;

           $('#editUserModal').modal('show');
     } catch (error) {
       alert('Error fetching user data: ' + error.message);
     }
            
      });
  });
 document.getElementById('saveUserChanges').addEventListener('click', async () => {
   const userId = document.getElementById('editUserId').value;
   const updatedData = {
     username: document.getElementById('editUserName').value,
     firstname: document.getElementById('editFirstName').value,
     lastname: document.getElementById('editLastName').value,
     email: document.getElementById('editEmail').value,
     phonenumber: document.getElementById('editPhoneNumber').value,
     city: document.getElementById('editCity').value,
     address: document.getElementById('editAddress').value,
     @* ProfilePic: document.getElementById('editProfilePic').value, *@
     isAdmin: document.getElementById('isAdminYes').checked
   };

 try {
     await update(ref(database, 'users/' + userId), updatedData);
     alert('User updated successfully!');
     // Update the table row dynamically
     const row = document.querySelector(`button[data-id='${userId}']`).closest('tr');
     row.cells[0].textContent = updatedData.username;
     row.cells[1].textContent = updatedData.firstname;
     row.cells[2].textContent = updatedData.lastname;
     row.cells[3].textContent = updatedData.phonenumber;
     row.cells[4].textContent = updatedData.email;
     // Hide the modal
     $('#editUserModal').modal('hide');
   } catch (error) {
     alert('Error updating user: ' + error.message);
   }

    @* try {
     await update(ref(database, 'users/' + userId), updatedData);
     alert('User updated successfully!');
     location.reload();
   } catch (error) {
     alert('Error updating user: ' + error.message);
   } *@
 });

</script>